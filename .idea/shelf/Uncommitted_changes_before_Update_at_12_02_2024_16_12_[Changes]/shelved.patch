Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"0112f1b3-f452-4b92-9be8-3df6487c7687\" name=\"Changes\" comment=\"ajout classe etat\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/Etat.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/Etat.java\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"CodeStyleSettingsInfer\">\r\n    <option name=\"done\" value=\"true\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Interface\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectCodeStyleSettingsMigration\">\r\n    <option name=\"version\" value=\"2\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2bx5Q0wP2BriVei8QVCGLb6PkOh\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"0112f1b3-f452-4b92-9be8-3df6487c7687\" name=\"Changes\" comment=\"\" />\r\n      <created>1707143871755</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1707143871755</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"ajout classe etat\">\r\n      <created>1707144684150</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707144684150</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"ajout classe etat\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"ajout classe etat\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,8 +5,11 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="0112f1b3-f452-4b92-9be8-3df6487c7687" name="Changes" comment="ajout classe etat">
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/Etat.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Etat.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Ouvert.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Ouvert.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/OuvertPile.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/OuvertPile.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/Recherche.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/Recherche.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -33,18 +36,28 @@
   <component name="ProjectCodeStyleSettingsMigration">
     <option name="version" value="2" />
   </component>
+  <component name="ProjectColorInfo">{
+  &quot;associatedIndex&quot;: 4
+}</component>
   <component name="ProjectId" id="2bx5Q0wP2BriVei8QVCGLb6PkOh" />
   <component name="ProjectLevelVcsManager" settingsEditedManually="true" />
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
   </component>
-  <component name="PropertiesComponent"><![CDATA[{
-  "keyToString": {
-    "RunOnceActivity.OpenProjectViewOnStart": "true",
-    "RunOnceActivity.ShowReadmeOnStart": "true"
+  <component name="PropertiesComponent">{
+  &quot;keyToString&quot;: {
+    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
+    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
+    &quot;WebServerToolWindowFactoryState&quot;: &quot;false&quot;,
+    &quot;git-widget-placeholder&quot;: &quot;master&quot;,
+    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,
+    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,
+    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,
+    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,
+    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;
   }
-}]]></component>
+}</component>
   <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
   <component name="TaskManager">
     <task active="true" id="Default" summary="Default task">
@@ -53,6 +66,8 @@
       <option name="number" value="Default" />
       <option name="presentableId" value="Default" />
       <updated>1707143871755</updated>
+      <workItem from="1707332350861" duration="901000" />
+      <workItem from="1707746917237" duration="2145000" />
     </task>
     <task id="LOCAL-00001" summary="ajout classe etat">
       <created>1707144684150</created>
@@ -63,6 +78,9 @@
     </task>
     <option name="localTasksCounter" value="2" />
     <servers />
+  </component>
+  <component name="TypeScriptGeneratedFilesManager">
+    <option name="version" value="3" />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
     <option name="TAB_STATES">
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_17\" default=\"true\" project-jdk-name=\"corretto-17\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	
+++ b/.idea/misc.xml	
@@ -1,4 +1,3 @@
-<?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
   <component name="ProjectRootManager" version="2" languageLevel="JDK_17" default="true" project-jdk-name="corretto-17" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
Index: src/Recherche.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import java.util.ArrayList;\r\nimport java.util.HashMap;\r\nimport java.util.List;\r\n\r\npublic class Recherche {\r\n    HashMap<Integer,List> ferme = new HashMap<>();\r\n    HashMap<Integer,List> ouvert = new HashMap<>() ;\r\n\r\n    // Ajout de l'état initial à l'ensemble Ouvert\r\n\r\n    While( !ouvert.isEmpty() && !estBut(ouvert.teteOuvert()) ){\r\n        Etat etat = new Etat(\"etat\",ouvert.teteOuvert(),0);\r\n        ouvert.supprimerEtat(etat.getContenus());\r\n        ferme.put(ferme.size()-1,etat.getContenus());\r\n        for(Etat voisin : etat.getVoisins()){\r\n            if(voisin.getContenus())\r\n            ouvert.ajout(voisin.getContenus());\r\n        }\r\n\r\n\r\n\r\n    }\r\n    //ALgo\r\n\r\n\r\n    // Fonction pour calculer l'heuristique d'un état\r\n    public static int heuristic(String etat) {\r\n        // Implémentez votre fonction heuristique ici\r\n        return 0; // Pour l'exemple, retourne simplement 0\r\n        }\r\n    public Boolean estBut(List ouvert){ return true; }\r\n    // Fonction pour récupérer le meilleur état dans l'ensemble Ouvert\r\n    /*public static State meilleur(PriorityQueue<State> ouvert) {\r\n        return ouvert.peek();\r\n        }*/\r\n\r\n}
===================================================================
diff --git a/src/Recherche.java b/src/Recherche.java
--- a/src/Recherche.java	
+++ b/src/Recherche.java	
@@ -1,23 +1,28 @@
 import java.util.ArrayList;
 import java.util.HashMap;
 import java.util.List;
+import java.util.Stack;
 
-public class Recherche {
-    HashMap<Integer,List> ferme = new HashMap<>();
-    HashMap<Integer,List> ouvert = new HashMap<>() ;
+public class Recherche  {
+    HashMap<Integer, List> ferme = new HashMap<>();
+    Stack <Ouvert> = new Stack<>();
 
     // Ajout de l'état initial à l'ensemble Ouvert
 
-    While( !ouvert.isEmpty() && !estBut(ouvert.teteOuvert()) ){
-        Etat etat = new Etat("etat",ouvert.teteOuvert(),0);
-        ouvert.supprimerEtat(etat.getContenus());
-        ferme.put(ferme.size()-1,etat.getContenus());
-        for(Etat voisin : etat.getVoisins()){
-            if(voisin.getContenus())
-            ouvert.ajout(voisin.getContenus());
-        }
+    public void heuristique (){
+        while( !ouvert.isEmpty() &&!estBut(ouvert.teteOuvert()))
+        {
+            Etat etat = new Etat("etat", ouvert.teteOuvert(), 0);
+            ouvert.supprimerEtat(etat.getContenus());
+            ferme.put(ferme.size() - 1, etat.getContenus());
+            for (Etat voisin : etat.getVoisins()) {
+                if (voisin.getContenus()) {
+                    ouvert.ajout(voisin.getContenus());
+                }
+            }
 
 
+        }
 
     }
     //ALgo
